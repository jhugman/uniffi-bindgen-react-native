# Generated by uniffi-bindgen-react-native
cmake_minimum_required(VERSION 3.9.0)
project({{ self.config.project.cpp_filename() }})

{%- let root = self.project_root() %}
{%- let dir = self.config.project.bindings.cpp_path(root) %}
{%- let bindings_dir = self.relative_to(root, dir) %}
{%- let dir = self.config.project.tm.cpp_path(root) %}
{%- let tm_dir = self.relative_to(root, dir) %}

set (CMAKE_VERBOSE_MAKEFILE ON)
set (CMAKE_CXX_STANDARD 17)

# Specifies a path to native header files.
include_directories(
    {{ tm_dir }}
    {{ bindings_dir }}

    $$(shell node -p "require.resolve('uniffi-bindgen-react-native/objects')" | sed 's/\/dist.*//')/cpp/includes
)

add_library(
    ${CMAKE_PROJECT_NAME} SHARED
    {{ tm_dir }}/{{ self.config.project.cpp_filename() }}.cpp
    {%- for m in self.config.modules %}
    {{ bindings_dir }}/{{ m.cpp_filename() }}
    {%- endfor %}
    cpp-adapter.cpp
)

{%- let dir = self.config.project.android.jni_libs(root) %}
{%- let jni_libs_dir = self.relative_to(root, dir) %}

cmake_path(
  SET MY_RUST_LIB
  ${CMAKE_SOURCE_DIR}/{{ jni_libs_dir }}/${ANDROID_ABI}/{{ self.config.rust_crate.library_file(Some("android")) }}
  NORMALIZE
)
add_library(my_rust_lib STATIC IMPORTED)
set_target_properties(my_rust_lib PROPERTIES IMPORTED_LOCATION ${MY_RUST_LIB})

find_package(ReactAndroid REQUIRED CONFIG)
find_package(fbjni REQUIRED CONFIG)
find_library(LOGCAT log)

target_link_libraries(
  ${CMAKE_PROJECT_NAME}
  fbjni::fbjni
  ReactAndroid::jsi
  ReactAndroid::turbomodulejsijni
  ReactAndroid::react_nativemodule_core
  ${LOGCAT}
  my_rust_lib
)
