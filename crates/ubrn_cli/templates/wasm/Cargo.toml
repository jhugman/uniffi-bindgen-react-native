# Generated by uniffi-bindgen-react-native
{%- let root = project_root() %}
{%- let crate_dir = config.project.crate_.crate_dir_relative(root) %}
{%- let crate_dir = relative_to(root, crate_dir) %}
[package]
name = "{{ config.project.wasm.wasm_crate_name() }}"
version = "{{ config.project.project_version() }}"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
{{ config.rust_crate.package_name() }} = { path = "{{ crate_dir }}"
    {%- match config.project.wasm.features %}
    {%- when Some(features) %}, features = [
        {%- for feature in features %}"{{ feature }}"
        {%- if !loop.last %}, {% endif %}
        {%- endfor -%}
    ]
    {%- else %}
    {%- endmatch %} }
# We want to ensure that the version of wasm-bindgen is selected by the
# uniffi-runtime-javascript crate.
# cargo is smart enough to do this if we don't put any further restrictions
# on it.
uniffi-runtime-javascript = { version = "{{ runtime_version() }}", features = ["wasm32"] }
wasm-bindgen = "*"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

{%- if !config.project.wasm.workspace %}

[workspace]
{%- endif %}
{# space -#}
